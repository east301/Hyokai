>Mathematical
abs(x)
cbrt(dp)
ceil(dp or numeric)
ceiling(dp or numeric)
degrees(dp)
div(y numeric, x numeric)
exp(dp or numeric)
floor(dp or numeric)
ln(dp or numeric)
log(dp or numeric)
log(b numeric, x numeric)
mod(y, x)
pi()
power(a dp, b dp)
power(a numeric, b numeric)
radians(dp)
random()
round(dp or numeric)
round(v numeric, s int)
setseed(dp)
sign(dp or numeric)
sqrt(dp or numeric)
trunc(dp or numeric)
trunc(v numeric, s int)
width_bucket(op numeric, b1 numeric, b2 numeric, count int)
width_bucket(op dp, b1 dp, b2 dp, count int)
>Trigonometric
acos(x)
asin(x)
atan(x)
atan2(y, x)
cos(x)
cot(x)
sin(x)
tan(x)
>String
bit_length(string)
char_length(string) or character_length(string)
lower(string)
octet_length(string)
overlay(string placing string from int [for int])
position(substring in string)
substring(string [from int] [for int])
substring(string from pattern)
substring(string from pattern for escape)
trim([leading | trailing | both] [characters] from string)
upper(string)
ascii(string)
btrim(string text [, characters text])
chr(int)
concat(str "any" [, str "any" [, ...] ])
concat_ws(sep text, str "any" [, str "any" [, ...] ])
convert(string bytea, src_encoding name, dest_encoding name)
convert_from(string bytea, src_encoding name)
convert_to(string text, dest_encoding name)
decode(string text, format text)
encode(data bytea, format text)
format(formatstr text [, str "any" [, ...] ])
initcap(string)
left(str text, n int)
length(string)
length(string bytea, encoding name )
lpad(string text, length int [, fill text])
ltrim(string text [, characters text])
md5(string)
pg_client_encoding()
quote_ident(string text)
quote_literal(string text)
quote_literal(value anyelement)
quote_nullable(string text)
quote_nullable(value anyelement)
regexp_matches(string text, pattern text [, flags text])
regexp_replace(string text, pattern text, replacement text [, flags text])
regexp_split_to_array(string text, pattern text [, flags text ])
regexp_split_to_table(string text, pattern text [, flags text])
world
repeat(string text, number int)
replace(string text, from text, to text)
reverse(str)
right(str text, n int)
rpad(string text, length int [, fill text])
rtrim(string text [, characters text])
split_part(string text, delimiter text, field int)
strpos(string, substring)
substr(string, from [, count])
to_ascii(string text [, encoding text])
to_hex(number int or bigint)
translate(string text, from text, to text)
>Binary String
octet_length(string)
overlay(string placing string from int [for int])
position(substring in string)
substring(string [from int] [for int])
trim([both] bytes from string)
btrim(string bytea, bytes bytea)
decode(string text, type text)
encode(string bytea, type text)
get_bit(string, offset)
get_byte(string, offset)
length(string)
md5(string)
set_bit(string, offset, newvalue)
set_byte(string, offset, newvalue)
>Data Type Formatting
to_char(timestamp, text)
to_char(interval, text)
to_char(int, text)
to_char(double precision, text)
to_char(numeric, text)
to_date(text, text)
to_number(text, text)
to_timestamp(text, text)
to_timestamp(double precision)
>Date/Time
age(timestamp, timestamp)
age(timestamp)
clock_timestamp()
current_date
current_time
current_timestamp
date_part(text, timestamp)
date_part(text, interval)
date_trunc(text, timestamp)
extract(field from timestamp)
extract(field from interval)
isfinite(date)
isfinite(timestamp)
isfinite(interval)
justify_days(interval)
justify_hours(interval)
justify_interval(interval)
localtime
localtimestamp
now()
statement_timestamp()
timeofday()
transaction_timestamp()
>Enum Support
enum_first(anyenum)
enum_last(anyenum)
enum_range(anyenum)
enum_range(anyenum, anyenum)
enum_range(NULL, 'green'::rainbow)
enum_range('orange'::rainbow, NULL)
>Geometric
area(object)
center(object)
diameter(circle)
height(box)
isclosed(path)
isopen(path)
length(object)
npoints(path)
npoints(polygon)
pclose(path)
popen(path)
radius(circle)
width(box)
box(circle)
box(point, point)
box(polygon)
circle(box)
circle(point, double precision)
circle(polygon)
lseg(box)
lseg(point, point)
path(polygon)
point(double precision, double precision)
point(box)
point(circle)
point(lseg)
point(polygon)
polygon(box)
polygon(circle)
polygon(npts, circle)
polygon(path)
>Network Address
abbrev(inet)
abbrev(cidr)
broadcast(inet)
family(inet)
host(inet)
hostmask(inet)
masklen(inet)
netmask(inet)
network(inet)
set_masklen(inet, int)
set_masklen(cidr, int)
text(inet)
>Text Search
get_current_ts_config()
length(tsvector)
numnode(tsquery)
plainto_tsquery([ config regconfig , ] query text)
querytree(query tsquery)
setweight(tsvector, "char")
strip(tsvector)
to_tsquery([ config regconfig , ] query text)
to_tsvector([ config regconfig , ] document text)
ts_headline([ config regconfig, ] document text, query tsquery [, options text ])
ts_rank([ weights float4[], ] vector tsvector, query tsquery [, normalization integer ])
ts_rank_cd([ weights float4[], ] vector tsvector, query tsquery [, normalization integer ])
ts_rewrite(query tsquery, target tsquery, substitute tsquery)
ts_rewrite(query tsquery, select text)
tsvector_update_trigger()
tsvector_update_trigger_column()
>JSON
array_to_json(anyarray [, pretty_bool])
row_to_json(record [, pretty_bool])
>Sequence Manipulation
currval(regclass)
lastval()
nextval(regclass)
setval(regclass, bigint)
setval(regclass, bigint, boolean)
>Array
array_append(anyarray, anyelement)
array_cat(anyarray, anyarray)
array_ndims(anyarray)
array_dims(anyarray)
array_fill(anyelement, int[], [, int[]])
array_length(anyarray, int)
array_lower(anyarray, int)
array_prepend(anyelement, anyarray)
array_to_string(anyarray, text [, text])
array_upper(anyarray, int)
string_to_array(text, text [, text])
unnest(anyarray)
>Range
lower(anyrange)
upper(anyrange)
isempty(anyrange)
lower_inc(anyrange)
upper_inc(anyrange)
lower_inf(anyrange)
upper_inf(anyrange)
>Aggregate
array_agg(expression)
avg(expression)
bit_and(expression)
bit_or(expression)
bool_and(expression)
bool_or(expression)
count(*)
count(expression)
every(expression)
max(expression)
min(expression)
string_agg(expression, delimiter)
sum(expression)
xmlagg(expression)
>Window
row_number()
rank()
dense_rank()
percent_rank()
cume_dist()
ntile(num_buckets integer)
lag(value any [, offset integer [, default any ]])
lead(value any [, offset integer [, default any ]])
first_value(value any)
last_value(value any)
nth_value(value any, nth integer)
>Set Returning
generate_series(start, stop)
generate_series(start, stop, step)
generate_series(start, stop, step interval)
>System Information
current_catalog
current_database()
current_query()
current_schema[()]
current_schemas(boolean)
current_user
inet_client_addr()
inet_client_port()
inet_server_addr()
inet_server_port()
pg_backend_pid()
pg_conf_load_time()
pg_is_other_temp_schema(oid)
pg_listening_channels()
pg_my_temp_schema()
pg_postmaster_start_time()
pg_trigger_depth()
session_user
user
version()
has_any_column_privilege(user, table, privilege)
has_any_column_privilege(table, privilege)
has_column_privilege(user, table, column, privilege)
has_column_privilege(table, column, privilege)
has_database_privilege(user, database, privilege)
has_database_privilege(database, privilege)
has_foreign_data_wrapper_privilege(user, fdw, privilege)
has_foreign_data_wrapper_privilege(fdw, privilege)
has_function_privilege(user, function, privilege)
has_function_privilege(function, privilege)
has_language_privilege(user, language, privilege)
has_language_privilege(language, privilege)
has_schema_privilege(user, schema, privilege)
has_schema_privilege(schema, privilege)
has_sequence_privilege(user, sequence, privilege)
has_sequence_privilege(sequence, privilege)
has_server_privilege(user, server, privilege)
has_server_privilege(server, privilege)
has_table_privilege(user, table, privilege)
has_table_privilege(table, privilege)
has_tablespace_privilege(user, tablespace, privilege)
has_tablespace_privilege(tablespace, privilege)
pg_has_role(user, role, privilege)
pg_has_role(role, privilege)
pg_collation_is_visible(collation_oid)
pg_conversion_is_visible(conversion_oid)
pg_function_is_visible(function_oid)
pg_opclass_is_visible(opclass_oid)
pg_operator_is_visible(operator_oid)
pg_opfamily_is_visible(opclass_oid)
pg_table_is_visible(table_oid)
pg_ts_config_is_visible(config_oid)
pg_ts_dict_is_visible(dict_oid)
pg_ts_parser_is_visible(parser_oid)
pg_ts_template_is_visible(template_oid)
pg_type_is_visible(type_oid)
format_type(type_oid, typemod)
pg_describe_object(catalog_id, object_id, object_sub_id)
pg_get_constraintdef(constraint_oid)
pg_get_constraintdef(constraint_oid, pretty_bool)
pg_get_expr(pg_node_tree, relation_oid)
pg_get_expr(pg_node_tree, relation_oid, pretty_bool)
pg_get_functiondef(func_oid)
pg_get_function_arguments(func_oid)
pg_get_function_identity_arguments(func_oid)
pg_get_function_result(func_oid)
pg_get_indexdef(index_oid)
pg_get_indexdef(index_oid, column_no, pretty_bool)
pg_get_keywords()
pg_get_ruledef(rule_oid)
pg_get_ruledef(rule_oid, pretty_bool)
pg_get_serial_sequence(table_name, column_name)
pg_get_triggerdef(trigger_oid)
pg_get_triggerdef(trigger_oid, pretty_bool)
pg_get_userbyid(role_oid)
pg_get_viewdef(view_name)
pg_get_viewdef(view_name, pretty_bool)
pg_get_viewdef(view_oid)
pg_get_viewdef(view_oid, pretty_bool)
pg_get_viewdef(view_oid, wrap_column_int)
pg_options_to_table(reloptions)
pg_tablespace_databases(tablespace_oid)
pg_tablespace_location(tablespace_oid)
pg_typeof(any)
collation for (any)
col_description(table_oid, column_number)
obj_description(object_oid, catalog_name)
obj_description(object_oid)
shobj_description(object_oid, catalog_name)
txid_current()
txid_current_snapshot()
txid_snapshot_xip(txid_snapshot)
txid_snapshot_xmax(txid_snapshot)
txid_snapshot_xmin(txid_snapshot)
txid_visible_in_snapshot(bigint, txid_snapshot)
>System Administration
current_setting(setting_name)
set_config(setting_name, new_value, is_local)
pg_cancel_backend(pid int)
pg_reload_conf()
pg_rotate_logfile()
pg_terminate_backend(pid int)
pg_create_restore_point(name text)
pg_current_xlog_insert_location()
pg_current_xlog_location()
pg_start_backup(label text [, fast boolean ])
pg_stop_backup()
pg_switch_xlog()
pg_xlogfile_name(location text)
pg_xlogfile_name_offset(location text)
pg_xlog_location_diff(location text, location text)
pg_is_in_recovery()
pg_last_xlog_receive_location()
pg_last_xlog_replay_location()
pg_last_xact_replay_timestamp()
pg_is_xlog_replay_paused()
pg_xlog_replay_pause()
pg_xlog_replay_resume()
pg_export_snapshot()
pg_column_size(any)
pg_database_size(oid)
pg_database_size(name)
pg_indexes_size(regclass)
pg_relation_size(relation regclass, fork text)
pg_relation_size(relation regclass)
pg_size_pretty(bigint)
pg_size_pretty(numeric)
pg_table_size(regclass)
pg_tablespace_size(oid)
pg_tablespace_size(name)
pg_total_relation_size(regclass)
pg_relation_filenode(relation regclass)
pg_relation_filepath(relation regclass)
pg_ls_dir(dirname text)
pg_read_file(filename text [, offset bigint, length bigint])
pg_read_binary_file(filename text [, offset bigint, length bigint])
pg_stat_file(filename text)
pg_advisory_lock(key bigint)
pg_advisory_lock(key1 int, key2 int)
pg_advisory_lock_shared(key bigint)
pg_advisory_lock_shared(key1 int, key2 int)
pg_advisory_unlock(key bigint)
pg_advisory_unlock(key1 int, key2 int)
pg_advisory_unlock_all()
pg_advisory_unlock_shared(key bigint)
pg_advisory_unlock_shared(key1 int, key2 int)
pg_advisory_xact_lock(key bigint)
pg_advisory_xact_lock(key1 int, key2 int)
pg_advisory_xact_lock_shared(key bigint)
pg_advisory_xact_lock_shared(key1 int, key2 int)
pg_try_advisory_lock(key bigint)
pg_try_advisory_lock(key1 int, key2 int)
pg_try_advisory_lock_shared(key bigint)
pg_try_advisory_lock_shared(key1 int, key2 int)
pg_try_advisory_xact_lock(key bigint)
pg_try_advisory_xact_lock(key1 int, key2 int)
pg_try_advisory_xact_lock_shared(key bigint)
pg_try_advisory_xact_lock_shared(key1 int, key2 int)
